# Compliance Reference Context for RAG Inspector
# ------------------------------------------------------
This document outlines key cloud infrastructure compliance controls for HIPAA, PCI-DSS, and FedRAMP. Use this context when evaluating Terraform configurations for violations or gaps. Your goal is to flag potential issues and suggest remediations based on this information.

---

## HIPAA (Health Insurance Portability and Accountability Act)

- **Data Protection**: ePHI must be encrypted in transit and at rest using NIST-approved algorithms.
- **Access Control**: Only authorized users via least-privilege IAM roles.
- **Audit Controls**: Enable logging (CloudTrail, VPC Flow Logs).
- **Transmission Security**: Enforce HTTPS with valid SSL/TLS.
- **Backup & DR**: Encrypted, versioned backups.
- **Public Access**: No publicly accessible S3 buckets or compute.

---

## PCI-DSS (Payment Card Industry Data Security Standard)

- **Network Segmentation**: Isolate CDE with subnets, firewalls, security groups.
- **Encryption**: AES-256+ for all cardholder data.
- **MFA**: Required for all administrative logins.
- **Logging & Monitoring**: Continuous collection and review of logs.
- **Access Control**: Need-to-know basis.
- **Patch Management**: Up-to-date AMIs and OS packages.

---

## FedRAMP (Federal Risk and Authorization Management Program)

- **FIPS Encryption**: Comply with FIPS 140-2.
- **Boundary Protection**: Strict ingress/egress controls on VPCs/subnets.
- **Tagging**: Sensitivity classification (LOW/MODERATE/HIGH).
- **IAM**: RBAC with fine-grained policies.
- **Continuous Monitoring**: AWS Config, GuardDuty, Security Hub.
- **Data Residency**: US Gov or FedRAMP-approved regions.
- **Public Exposure**: No unprotected internet-facing systems.

---

## Violation Categories to Flag

When you scan the plan, look specifically for any of these misconfigurations:

- **Public S3 Buckets** → `compliance_concern`: "Public S3"
- **Unencrypted Storage** (EBS, RDS, S3) → "Unencrypted Storage"
- **Overly Broad IAM** (wildcard `*` actions or principals) → "Overly Broad IAM"
- **Logging Disabled** (CloudTrail/VPC Flow Logs off) → "Logging Disabled"
- **Open Ingress** (0.0.0.0/0 on security group ingress) → "Open Ingress"
- **Open Egress** (0.0.0.0/0 on security group egress) → "Open Egress"
- **Missing MFA** on admin roles → "Missing MFA"
- **Public Exposure** of load balancers or compute without auth → "Public Exposure"

---

## Cross-Resource Validation

When evaluating a violation, cross-check related resources that could remediate or contradict it. For example:

- If an `aws_s3_bucket` shows `compliance_concern: "Unencrypted Storage"`, verify if a separate resource like `aws_s3_bucket_server_side_encryption_configuration` exists for **the same** bucket. If encryption is correctly configured, do **not** flag that bucket.
- If a bucket policy later blocks public access (`aws_s3_bucket_public_access_block`) for the same bucket name, suppress any earlier "Public S3" finding for that bucket.
- For security groups, if a rule opens egress but a subsequent network ACL explicitly denies that traffic on the same CIDR/port, suppress the SG-level egress finding.

Always prefer the most restrictive configuration when multiple resources apply to the same entity.

---

## Output Format

Output a single **raw JSON object** (no markdown fences, no prose) with two keys:
1. `violations` — an array of objects, each with exactly these six fields:
   - `resource_type` (e.g., "aws_s3_bucket")
   - `resource_name`
   - `compliance_concern`
   - `standard` (HIPAA | PCI-DSS | FedRAMP)
   - `severity` (Low / Medium / High)
   - `remediation` (Short suggested fix)
2. `recommendations` — an array of high-level best-practice recommendations based on the aggregated violations (e.g., "Enable bucket encryption by default", "Implement least-privilege IAM policies").

Do **not** include any explanation or extra fields—only the raw JSON object with `violations` and `recommendations`.
